<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Problem 923</title>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<style>
body { font-family: Arial, sans-serif; margin: 40px; }
h1 { font-size: 1.6em; }
.difficulty { color: gray; font-size: 0.95em; margin-top: 6px; }
p { line-height: 1.45; }
ol, ul { margin-left: 1.2em; }
li { margin-bottom: 0.4em; }
</style>
</head>
<body>
<h1>Problem 923 - 2019 IMOSL, C4</h1>
<h2 class='difficulty'>Difficulty: 8</h2>
<p>
On a flat plane in Camelot, King Arthur builds a labyrinth \(\mathfrak{L}\) consisting of \(n\) walls, each of which is an infinite straight line. No two walls are parallel, and no three walls have a common point. Merlin then paints one side of each wall entirely red and the other side entirely blue.<br><br>
At the intersection of two walls there are four corners: two diagonally opposite corners where a red side and a blue side meet, one corner where two red sides meet, and one corner where two blue sides meet. At each such intersection, there is a two-way door connecting the two diagonally opposite corners at which sides of different colours meet.<br><br>
After Merlin paints the walls, Morgana then places some knights in the labyrinth. The knights can walk through doors, but cannot walk through walls.<br><br>
Let \(k(\mathfrak{L})\) be the largest number \(k\) such that, no matter how Merlin paints the labyrinth \(\mathfrak{L},\) Morgana can always place at least \(k\) knights such that no two of them can ever meet. For each \(n,\) what are all possible values for \(k(\mathfrak{L}),\) where \(\mathfrak{L}\) is a labyrinth with \(n\) walls?</p>
<p><a href="../problem_tracker.html">Back to Problem List</a></p>
</body>
</html>
