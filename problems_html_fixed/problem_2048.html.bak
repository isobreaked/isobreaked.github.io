<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Problem 2048</title>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<style>
body { font-family: Arial, sans-serif; margin: 40px; }
h1 { font-size: 1.6em; }
.difficulty { color: gray; font-size: 0.95em; margin-top: 6px; }
p { line-height: 1.45; }
ol, ul { margin-left: 1.2em; }
li { margin-bottom: 0.4em; }
</style>
</head>
<body>
<h1>Problem 2048 - USEMO 2024, P1 of 6</h1>
<h2 class='difficulty'>Difficulty: 6</h2>
<p>There are \(1001\) stacks of coins \(S_1\), \(S_2\), \dots, \(S_{1001}\). Initially, stack \(S_k\) has \(k\) coins for each \(k = 1,2,\dots,1001\). In an operation, one selects an ordered pair \((i,j)\) of indices \(i\) and \(j\) satisfying \(1 \leq i < j \leq 1001\) subject to two conditions: <ul><li> The stacks \(S_i\) and \(S_j\) must each have at least \(1\) coin.</li><li> The ordered pair \((i,j)\) must <i>not</i> have been selected before.</li></ul> Then, if \(S_i\) and \(S_j\) have \(a\) coins and \(b\) coins respectively, one removes \(\gcd(a,b)\) coins from each stack.</p>
<p>What is the maximum number of times this operation could be performed?</p>
<h2>Idea</h2>
<p>Looking at the construction, the first thing to notice is that the first \(k\) elements
(I used the first \(k + 1\) elements in my bound - probably \(k\) also
works) do not act on each other, but they are the ones that end up at all zeroes. In
contrast, the last \(k + 1\) elements all act on each other. So we kind of sort of use the
<b>equality</b> philosophy - the bound for the last \(k + 1\) is as good as it gets, so we take it
for granted - and a split is naturally formed now between the first \(k\) and last \(k + 1\)
piles.</p>
<p><a href="../problem_tracker.html">Back to Problem List</a></p>
</body>
</html>
